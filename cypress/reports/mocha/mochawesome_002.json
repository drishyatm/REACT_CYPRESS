{
  "stats": {
    "suites": 2,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-12-06T12:01:36.945Z",
    "end": "2023-12-06T12:01:55.752Z",
    "duration": 18807,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fd6fa3c4-ddc4-4f71-af44-179f745a3559",
      "title": "",
      "fullFile": "cypress/e2e/test_shopping.cy.js",
      "file": "cypress/e2e/test_shopping.cy.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4284ec4b-28a3-4ae1-ab3d-6da01a063957",
          "title": "Shoping in Evershop",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [],
          "suites": [
            {
              "uuid": "887bf863-efa1-4dd4-bcda-07f5897ff8d1",
              "title": "Shopping E2E Testing",
              "fullFile": "",
              "file": "",
              "beforeHooks": [],
              "afterHooks": [],
              "tests": [
                {
                  "title": "Validate the shoping page",
                  "fullTitle": "Shoping in Evershop Shopping E2E Testing Validate the shoping page",
                  "timedOut": null,
                  "duration": 18705,
                  "state": "passed",
                  "speed": "slow",
                  "pass": true,
                  "fail": false,
                  "pending": false,
                  "context": null,
                  "code": "(0, _shoppingUtil.validateShoppingPage)(women.female, women.url_women);\nlet cheapestPrice = Infinity;\nlet cheapestProduct = '';\nconst prices = [];\nlet minPrice;\ncy.get(_selectors.default.product_list).each($product => {\n  const salePrice = parseFloat($product.find(_selectors.default.sale_price).text().replace('$', ''));\n  const regularPrice = parseFloat($product.find(_selectors.default.regular_price).text().replace('$', ''));\n  prices.push(...[salePrice, regularPrice].filter(price => !isNaN(price)));\n  cy.log({\n    salePrice\n  }, {\n    regularPrice\n  });\n  if (!isNaN(salePrice) && salePrice < cheapestPrice) {\n    cheapestPrice = salePrice;\n    cheapestProduct = 'Sale Price';\n  }\n  if (!isNaN(regularPrice) && regularPrice < cheapestPrice) {\n    cheapestPrice = regularPrice;\n    cheapestProduct = 'Regular Price';\n  }\n}).then(() => {\n  minPrice = Math.min(...prices);\n  if (cheapestPrice === minPrice) {\n    cy.log({\n      cheapestPrice\n    }, {\n      cheapestProduct\n    });\n    cy.wrap(cheapestPrice).should('equal', minPrice);\n    cy.wrap(cheapestProduct).should('be.oneOf', ['Sale Price', 'Regular Price']);\n  } else {\n    cy.log(`Minimum price does not match the Calculated Cheapest price!.Min Price is ${minPrice}`);\n  }\n  cy.get(_selectors.default.item_list).contains(cheapestPrice).parents(_selectors.default.item_list).find('a', 'href').eq(0).click();\n  let count_size = 0;\n  cy.get(_selectors.default.variant_options).find('li').as('sizeoption').each($li => {\n    const optionText = $li.text();\n    // Check if the list item contains one of the specified options\n    if (optionText.match(/S|M|L|XL/)) {\n      cy.log(`Found option: ${optionText}`);\n      count_size++;\n    }\n  }).then(() => {\n    cy.log(`Total count of options (S, M, L, XL): ${count_size}`);\n    // Check if variants exist and select them\n    if (count_size > 0) {\n      cy.get('@sizeoption').first().click().wait(2000);\n      if (count_size > 1) {\n        cy.get('@sizeoption').eq(count_size + 1).click().wait(2000);\n      }\n    }\n    cy.contains('ADD TO CART').click().wait(2000);\n    cy.contains('VIEW CART').click().wait(2000);\n    //check the cart\n    cy.url().should('include', '/cart');\n    cy.contains('Order summary').should('be.visible');\n    //validate the price added to cart\n    let subtotal;\n    cy.contains('Sub total').next('div').invoke('text').then(text => {\n      subtotal = text.trim();\n    });\n    let total;\n    cy.get(_selectors.default.total_value).invoke('text').then(text => {\n      total = text.trim();\n    }).as('cartTotal');\n    let finalPrice;\n    const discountPercentage = 20;\n    const discountAmount = cheapestPrice * discountPercentage / 100;\n    finalPrice = cheapestPrice - discountAmount;\n    cy.log(`discounted price ${finalPrice}`);\n    //cy.get('@cartTotal').contains(cheapestPrice)\n    //finalPrice =calculateFinalPrice(cheapestPrice)\n  });\n});",
                  "err": {},
                  "uuid": "69d2df8f-42cb-43d5-b6c4-c5c00df1633b",
                  "parentUUID": "887bf863-efa1-4dd4-bcda-07f5897ff8d1",
                  "isHook": false,
                  "skipped": false
                }
              ],
              "suites": [],
              "passes": [
                "69d2df8f-42cb-43d5-b6c4-c5c00df1633b"
              ],
              "failures": [],
              "pending": [],
              "skipped": [],
              "duration": 18705,
              "root": false,
              "rootEmpty": false,
              "_timeout": 2000
            }
          ],
          "passes": [],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 0,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "cypress/reports/mocha",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}